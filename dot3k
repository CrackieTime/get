#!/bin/bash

if [ $EUID -ne 0 ]; then
        USER_HOME=$(getent passwd $USER | cut -d: -f6)
else
        USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
fi
WORKING_DIR=$USER_HOME/Pimoroni

confirm () {
	read -r -p "$1 [y/N] " response < /dev/tty
	response=${response,,}
	if [[ $response =~ ^(yes|y)$ ]]; then
		true
	else
		false
	fi
}

pip_pkg_req () {
	PIP_CHK=$(pip search $1 | grep INSTALLED)
	if [ "" == "$PIP_CHK" ]; then
		true	
	else
		false
	fi
}

pip3_pkg_req (){
        PIP_CHK=$(pip-3.2 search $1 | grep INSTALLED)
        if [ "" == "$PIP_CHK" ]; then
                true
        else
                false
        fi
}


apt_pkg_req () {
	APT_CHK=$(dpkg-query -W --showformat='${Status}\n' $1|grep "install ok installed")
	if [ "" == "$APT_CHK" ]; then
		true
	else
		false
	fi
}

success () {
	echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning () {
	echo "$(tput setaf 1)$1$(tput sgr0)"
}

IS_RASPBIAN=`cat /etc/*-release | grep Raspbian`

if [[ "" == $IS_RASPBIAN ]]; then
	warning "Warning!"
	echo "Please only run this script on Raspbian on your Raspberry Pi"
	exit 1;
fi


if ! [[ $1 == '-y' ]]
then

	echo ""
	echo "This script will install dot3k/dothat and dependencies"
	echo ""
	warning "--- Warning ---"
	echo ""
	echo "Always be careful when running scripts and commands"
	echo "copied from the internet. Ensure they are from a"
	echo "trusted source."
	echo ""
	echo "If you want to see what this script does before"
	echo "running it, you should run:"
	echo "    \curl -sS get.pimoroni.com/dot3k"
	echo ""
	echo ""

	if confirm "Do you wish to continue?"; then
		RESP="true"
	else
		RESP="false"
	fi
fi

if [[ $RESP == "true" ]] || [[ $1 == '-y' ]]; then

	echo ""
	if confirm "Dot3k requires SPI and I2C, enable now?"; then

		\curl -sS get.pimoroni.com/spi | bash -s - "-y"
		\curl -sS get.pimoroni.com/i2c | bash -s - "-y"

	fi

	echo ""
	echo "Checking for install requirements..."

	if apt_pkg_req "python3-pip" || apt_pkg_req "python3-smbus" || apt_pkg_req "python3-dev" || apt_pkg_req "python-pip" || apt_pkg_req "python-smbus" || apt_pkg_req "python-dev"; then

		echo ""
		echo "One or more requires packages not found..."
		echo ""
		echo "Updating package indexes..."
		echo ""
		sudo apt-get update

		echo ""
		echo "Installing required packages..."
		echo ""
		sudo apt-get --force-yes --yes install python3-dev python3-pip python3-smbus python-dev python-pip python-smbus
	else
		echo ""
		success "Found!"	
	fi

	echo ""
	echo "Checking for Python modules..."
	
	if pip_pkg_req "dot3k"; then

		echo ""
		echo "Insalling Python 2 module"
		echo ""

		sudo pip install dot3k -I
	
	else
	
		echo ""
		success "Found!"
		echo ""

		if confirm "Python 2 module found. Reinstall/Update?"; then

			echo ""
			sudo pip install dot3k -I
			echo ""

		fi
	fi
	
	if pip3_pkg_req "dot3k"; then

		echo ""
		echo "Insalling Python 3 module"
		echo ""

		sudo pip-3.2 install dot3k -I
	
	else
	
		echo ""
		success "Found!"
		echo ""

		if confirm "Python 3 module found. Reinstall/Update?"; then

			echo ""
			sudo pip-3.2 install dot3k -I
			echo ""

		fi
	fi

	echo ""

        if ! [ -d $WORKING_DIR ]; then
                mkdir $WORKING_DIR
        fi

	if ! [ -d $WORKING_DIR/dot3k ]; then
		echo "Downloading Dot3k examples..."
		export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
		cd $TMPDIR
		git clone https://github.com/pimoroni/dot3k
		cd $WORKING_DIR
		mkdir dot3k
		cp -R $TMPDIR/dot3k/python/examples/* $WORKING_DIR/dot3k/
		rm -rf $TMPDIR
		echo ""
		success "Examples copied to $WORKING_DIR/dot3k/"
	
	else
		if confirm "Examples already exist, shall I replace them?"; then
			mv $WORKING_DIR/dot3k $WORKING_DIR/dot3k-backup
			echo "Updating Dot3k examples..."
			export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
			cd $TMPDIR
			git clone https://github.com/pimoroni/dot3k
			cd $WORKING_DIR
			mkdir dot3k
			cp -R $TMPDIR/dot3k/python/examples/* $WORKING_DIR/dot3k/
			rm -rf $TMPDIR
			echo ""
			warning "I backed up the examples to dot3k-backup, just in case you've changed anything!"
			success "Examples copied to $WORKING_DIR/dot3k/"
		fi
	fi

	echo ""
	echo "Checking additional software requirements..."

	if apt_pkg_req "vlc" || pip_pkg_req "psutil" || pip_pkg_req "pyusb" || pip_pkg_req "wifi"; then

		echo ""
		echo "Some Dot3k examples/plugins require additional software and/or modules"

		if confirm "Would you like to install them now? (~11mb download)"; then

			if apt_pkg_req "vlc"; then
				echo ""
				echo "Installing vlc for Radio plugin..."
				echo ""
				sudo apt-get --force-yes --yes install vlc
			fi
			echo "Installing additional Python 2 modules.."
			if pip_pkg_req "psutil"; then
				echo ""
				echo "Installing psutil for CPU plugin..."
				echo ""
				sudo pip install psutil
			fi
			if pip_pkg_req "pyusb"; then
				echo ""
				echo "Installing pyusb for remote control..."
				echo ""
				sudo pip install pyusb
			fi
			if pip_pkg_req "wifi"; then
				echo ""
				echo "Installing wifi for WLan plugin..."
				echo ""
				sudo pip install wifi
			fi
			echo "Installing additional Python 3 modules.."
			if pip3_pkg_req "psutil"; then
				echo ""
				echo "Installing psutil for CPU plugin..."
				echo ""
				sudo pip-3.2 install psutil
			fi
			if pip3_pkg_req "pyusb"; then
				echo ""
				echo "Installing pyusb for remote control..."
				echo ""
				sudo pip-3.2 install pyusb --pre
			fi
			if pip3_pkg_req "wifi"; then
				echo ""
				echo "Installing wifi for WLan plugin..."
				echo ""
				sudo pip-3.2 install wifi
			fi
			
		fi
	else
		echo ""
		success "Found!"
	fi

	# Display success message on display-o-tron
	sudo python -c $'from dot3k import backlight,lcd\n\nbacklight.rgb(0,255,0)\nlcd.clear()\nlcd.write("Install CompleteHave fun!")' >> /dev/null 2>&1
	echo ""
	success "All done!"
	echo ""
	echo "Enjoy your new Display-o-Tron 3000/HAT!"
	echo ""

else
	echo ""
	echo "Aborting..."
	echo ""
fi
