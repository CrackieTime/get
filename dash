#!/bin/bash

# Pimoroni Product Setup Dashboard
# Provides a familiar GUI for choosing which product installer to run

PIM_VERSION=1

if [ $EUID -ne 0 ]; then
	USER_HOME=$(getent passwd $USER | cut -d: -f6)
else
	USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
fi
WORKING_DIR=$USER_HOME/Pimoroni
DESKTOP_FILE="$USER_HOME/Desktop/pimoroni-dashboard.desktop"
DESKTOP_APP_FILE="/usr/share/applications/pimoroni-dashboard.desktop"
DESKTOP_ICON="/usr/share/pixmaps/pimoroni-dashboard.png"
DASHBOARD_SCRIPT="/usr/bin/pimoroni-dashboard"

WT_HEIGHT=17
WT_WIDTH=$(tput cols)

# Borrowed from Raspi-Config! https://github.com/asb/raspi-config/blob/master/raspi-config
if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
	WT_WIDTH=80
fi
if [ "$WT_WIDTH" -gt 178 ]; then
	WT_WIDTH=120
fi

WT_MENU_HEIGHT=$(($WT_HEIGHT-8))

success () {
	echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning () {
	echo "$(tput setaf 1)$1$(tput sgr0)"
}

pim_check_distro() {

	IS_RASPBIAN=`cat /etc/*-release | grep Raspbian`

	if [[ "" == $IS_RASPBIAN ]]; then
		warning "Warning!"
		echo "Please only run this script on Raspbian on your Raspberry Pi"
		exit 1;
	fi

}

pim_msgbox() {
	whiptail --msgbox "$1" $WT_HEIGHT $(($WT_WIDTH-20))
}

pim_yesno() {
	whiptail --yesno "$1" $WT_HEIGHT $(($WT_WIDTH-20))
}

pim_about() {
	pim_msgbox "\
Ahoy!

This handy tool will help you get started with Pimoroni products. Simply pick the add-on board you want to install software for from the list, hit select and we'll walk you through the install process in a few easy steps.

Enjoy

- The Pimoroni Crew\
"
}

pim_uninstall() {
	sudo rm $DASHBOARD_SCRIPT
	sudo rm $DESKTOP_ICON
	sudo rm $DESKTOP_FILE
	sudo rm $DESKTOP_APP_FILE
	pim_msgbox "Pimoroni Dashboard uninstalled!"
}

pim_install() {
	if [ ! -f $DESKTOP_FILE ]; then
		if pim_yesno "Do you want to add the Pimoroni Dashboard to your desktop?"; then
			export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
			curl -sSL get.pimoroni.com/pimoroni-dashboard.png >> $TMPDIR/pimoroni-dashboard.png
			curl -sSL get.pimoroni.com/dash >> $TMPDIR/dash
			sudo cp $TMPDIR/pimoroni-dashboard.png $DESKTOP_ICON
			sudo cp $TMPDIR/dash $DASHBOARD_SCRIPT
			sudo chmod +x $DASHBOARD_SCRIPT
			sudo gtk-update-icon-cache
			echo "\
[Desktop Entry]
Encoding=UTF-8
Name=Pimoroni Dash
GenericName=Pimoroni Dash
Comment=Manage software for Pimoroni products
TryExec=lxterminal
Exec=lxterminal --command $DASHBOARD_SCRIPT
Icon=$DESKTOP_ICON
Type=Application
Categories=Utility;\
" >> $TMPDIR/pimoroni-dashboard.desktop

			sudo desktop-file-install $TMPDIR/pimoroni-dashboard.desktop
			cp $DESKTOP_APP_FILE $DESKTOP_FILE
			rm -rf $TMPDIR

			rm -rf $TMPDIR
		fi
	fi
}

pim_update() {
	if pim_check_network && [ -f $DESKTOP_FILE ]; then
		if [[ $1 == 'noupdate' ]]; then
			return
		fi
		echo "Updating..."
		export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
		curl -sSL get.pimoroni.com/pimoroni-dashboard.png >> $TMPDIR/pimoroni-dashboard.png
		curl -sSL get.pimoroni.com/dash >> $TMPDIR/dash
		sudo cp $TMPDIR/pimoroni-dashboard.png $DESKTOP_ICON
		sudo cp $TMPDIR/dash $DASHBOARD_SCRIPT
		rm -rf $TMPDIR
		pimoroni-dashboard noupdate
		exit 0
	fi
}

pim_menu() {
	FUNCTION=$(whiptail --title "Pimoroni Software Installer" --menu "Choose your add-on..." $WT_HEIGHT $(($WT_WIDTH-10)) $WT_MENU_HEIGHT \
	--cancel-button Quit \
	--ok-button Select \
	"1 Pibrella" "Install Pibrella software & examples" \
	"2 Display-o-Tron 3000" "Install Dot3k software & examples" \
	"3 Unicorn Hat" "Install Unicorn Hat software & examples" \
	3>&1 1>&2 2>&3)

	#"4 PiGlow" "Install PiGlow software" \
	
	RETURN=$?
	if [ $RETURN -eq 1 ]; then
		return 0
	elif [ $RETURN -eq 0 ]; then
		case "$FUNCTION" in
			1\ *) pim_net_install pibrella ;;
			2\ *) pim_net_install dot3k ;;
			3\ *) pim_net_install unicornhat ;;
			4\ *) pim_net_install piglow ;;
			*) pim_msgbox "Error: unrecognized option";;
		esac ||pim_msgbox "There was an error running option $FUNCTION"
	fi
}

pim_check_network() {
	ping -q -w 1 -c 1 `ip r | grep default | cut -d ' ' -f 3` > /dev/null && return 0 || return 1
}

# Runs the relevant net install script and then returns to the menu
pim_net_install() {
	pim_check_network || (pim_msgbox "You don't appear to be connected to the internet, please check your connection and try again!" && exit 1)

	\curl -sS get.pimoroni.com/$1 | bash

	read -p "Press [Enter] key to continue..." < /dev/tty

	pim_menu
}

pim_check_distro

[ -d $WORKING_DIR ] || mkdir $WORKING_DIR
cd $WORKING_DIR

if [[ $1 == 'uninstall' ]]; then

	pim_uninstall

else

	pim_update $1
	pim_about # Display Splash
	pim_menu  # Display Menu
	pim_install

fi
