#!/bin/bash

scriptname="displayotron"
productname="Display-o-Tron 3000/HAT"
piplibname="dot3k" # should really be named displayotron
localdir="displayotron"
gitreponame="dot3k"
examplesdir="$gitreponame/python/examples"
i2creq="yes"
spireq="yes"
pkgdeplist=( "git" "python-pip" "python-dev" "python-smbus" "python3-pip" "python3-dev" "python3-smbus" )
moreaptdep=( "vlc" )
morepipdep=( "psutil" "pyusb" "wifi" )

success () {
    echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning () {
    echo "$(tput setaf 1)$1$(tput sgr0)"
}

IS_RASPBIAN=`cat /etc/*-release | grep Raspbian`

if [[ "" == $IS_RASPBIAN ]]; then
    warning "Warning!"
    echo "Please only run this script on Raspbian on your Raspberry Pi"
    exit 1;
fi

if [ $EUID -ne 0 ]; then
    USER_HOME=$(getent passwd $USER | cut -d: -f6)
else
    USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
fi

WORKING_DIR=$USER_HOME/Pimoroni
FORCE=$1

confirm () {
    if [ "$FORCE" == '-y' ]; then
        true
    else
        read -r -p "$1 [y/N] " response < /dev/tty
        response=${response,,}
        if [[ $response =~ ^(yes|y)$ ]]; then
                true
        else
                false
        fi
    fi
}

pip_chk_pip3 () {
    if [ -e /usr/bin/pip3  ]; then
        PIP3_BIN="pip3"
    else
        PIP3_BIN="pip-3.2"
    fi
}

pip_pkg_req3 () {
    pip_chk_pip3
    PIP_CHK=$($PIP3_BIN search $1 | grep INSTALLED)

    if [ "" == "$PIP_CHK" ]; then
        true
    else
        false
    fi
}

pip_pkg_req () {
    PIP_CHK=$(pip search $1 | grep INSTALLED)

    if [ "" == "$PIP_CHK" ]; then
        true
    else
        false
    fi
}

apt_pkg_req () {
    APT_CHK=$(dpkg-query -W --showformat='${Status}\n' $1|grep "install ok installed")

    if [ "" == "$APT_CHK" ]; then
        true
    else
        false
    fi
}

apt_pkg_install () {
    \curl -sS get.pimoroni.com/package | bash -s - $1 || { warning "Sorry, Apt failed to install $1, I can't continue!" && exit; }
}

echo ""
echo "This script will install everything needed to use"
echo "$productname"
echo ""
warning "--- Warning ---"
echo ""
echo "Always be careful when running scripts and commands"
echo "copied from the internet. Ensure they are from a"
echo "trusted source."
echo ""
echo "If you want to see what this script does before"
echo "running it, you should run:"
echo "    \curl -sS get.pimoroni.com/$scriptname"
echo ""
echo ""

if confirm "Do you wish to continue?"; then

    echo ""
    echo "Checking install requirements..."
    echo ""

    if [ $i2creq == "yes" ]; then
        echo ""
        if confirm "Hardware requires I2C, enable now?"; then
            \curl -sS get.pimoroni.com/i2c | bash -s - "-y"
        fi
    fi

    if [ $spireq == "yes" ]; then
        echo ""
        if confirm "Hardware requires SPI, enable now?"; then
            \curl -sS get.pimoroni.com/spi | bash -s - "-y"
        fi
    fi

    echo ""
    echo "Checking install requirements..."
    echo ""

    updatedb=false

    for pkgdep in ${pkgdeplist[@]}
        do if apt_pkg_req "$pkgdep" ; then
            updatedb=true
        fi
        done 

    if $updatedb ; then
    echo "Updating package indexes..."
    sudo apt-get update

    echo ""
    echo "Installing hardware requirements..."

    for pkgdep in ${pkgdeplist[@]}
        do if apt_pkg_req "$pkgdep" ; then
            apt_pkg_install "$pkgdep"
        fi
        done 
    else
        success "Found!"
    fi

    echo ""
    echo "Checking for Python 2 library..."

    if pip_pkg_req "$piplibname"; then

        echo ""
        echo "Installing $productname library for Python 2..."
        if ! sudo pip install $piplibname; then
            warning "Python 2 library install failed!"
            echo ""
            exit
        fi
        success "Done!"
    else
        echo ""
        success "Found!"
        echo ""
        if confirm "Python 2 module found. Reinstall/Update?"; then
            if ! sudo pip install $piplibname -I; then
                warning "Python 2 library install failed!"
                echo ""
                exit
            fi
            success "Done!"
        fi
    fi
    
    echo ""
    echo "Checking for Python 3 library..."

    if pip_pkg_req3 "$piplibname"; then

        echo ""
        echo "Installing $productname library for Python 3..."
            pip_chk_pip3
        if ! sudo $PIP3_BIN install $piplibname; then
            warning "Python 3 library install failed!"
            echo ""
            exit
        fi
    else

        echo ""
        success "Found!"
        echo ""

        if confirm "Python 3 module found. Reinstall/Update?"; then
            pip_chk_pip3
            if ! sudo $PIP3_BIN install $piplibname -I; then
                warning "Python 3 library install failed!"
                echo ""
                exit
            fi
        fi
    fi
    
    echo ""

        if ! [ -d $WORKING_DIR ]; then
                mkdir $WORKING_DIR
        fi

    if ! [ -d $WORKING_DIR/$localdir ]; then
        echo "Downloading $productname examples..."
        export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
        cd $TMPDIR
        git clone https://github.com/$gitreponame
        cd $WORKING_DIR
        mkdir $localdir
        cp -R $TMPDIR/$examplesdir/* $WORKING_DIR/$localdir/
        rm -rf $TMPDIR
        echo ""
        success "Examples copied to $WORKING_DIR/$localdir/"

    else
        if confirm "Examples already exist, shall I replace them?"; then
            mv $WORKING_DIR/$localdir $WORKING_DIR/$localdir-backup
            echo "Updating $productname examples..."
            export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
            cd $TMPDIR
            git clone https://github.com/$gitreponame
            cd $WORKING_DIR
            mkdir $localdir
            cp -R $TMPDIR/$examplesdir/* $WORKING_DIR/$localdir/
            rm -rf $TMPDIR
            echo ""
            warning "I backed up the examples to $localdir-backup, just in case you've changed anything!"
            success "Examples copied to $WORKING_DIR/$localdir/"
        fi
    fi

    echo ""
    echo "Checking additional software requirements..."

    for moredep in ${moreaptdep[@]}
        do if apt_pkg_req "$moredep" ; then
            moredepreq=true
        fi
        done

    for moredep in ${morepipdep[@]}
        do if pip_pkg_req "$moredep" ; then
            moredepreq=true
        fi
        done
        
    if $moredepreq ; then
        echo ""
        echo "Some $productname examples/plugins require additional software and/or modules"
        if confirm "Would you like to install them now?"; then    
            for moredep in ${moreaptdep[@]}
                do if apt_pkg_req "$moredep" ; then
                    apt_pkg_install "$moredep"
                fi
                done
            for moredep in ${morepipdep[@]}
                do if pip_pkg_req "$moredep" ; then
                    sudo pip install "$moredep"
                    sudo $PIP3_BIN install "$moredep"
                fi
                done
        fi
    else
    echo ""
    success "Found!"
    fi

    echo ""
    success "All done!"
    echo ""
    echo "Enjoy your new $productname!"
    echo ""

else
    echo ""
    echo "Aborting..."
    echo ""
    echo "If problems persist, visit forums.pimoroni.com for support"	
    echo ""
fi
