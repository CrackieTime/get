#!/bin/bash

productname="pHAT DAC" # the name of the product to install
scriptname="phatdac" # the name of this script
localdir="phatdac" # the name of the dir for copy of examples
spireq="no" # whether spi is required or not
i2creq="no" # whether i2c is required or not
i2sreq="yes" # whether i2s is required or not

CONFIG=/boot/config.txt

success () {
    echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning () {
    echo "$(tput setaf 1)$1$(tput sgr0)"
}

IS_RASPBIAN=`cat /etc/*-release | grep Raspbian`

if [[ "" == $IS_RASPBIAN ]]; then
    warning "Warning!"
    echo "Please only run this script on Raspbian on your Raspberry Pi"
    exit 1;
fi

if [ $EUID -ne 0 ]; then
    USER_HOME=$(getent passwd $USER | cut -d: -f6)
else
    USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
fi

WORKING_DIR=$USER_HOME/Pimoroni
FORCE=$1

confirm () {
    if [ "$FORCE" == '-y' ]; then
        true
    else
        read -r -p "$1 [y/N] " response < /dev/tty
        response=${response,,}
        if [[ $response =~ ^(yes|y)$ ]]; then
                true
        else
                false
        fi
    fi
}

echo ""
echo "This script will install everything needed to use"
echo "$productname"
echo ""
warning "--- Warning ---"
echo ""
echo "Always be careful when running scripts and commands"
echo "copied from the internet. Ensure they are from a"
echo "trusted source."
echo ""
echo "If you want to see what this script does before"
echo "running it, you should run:"
echo "    \curl -sS get.pimoroni.com/$scriptname"
echo ""

if confirm "Do you wish to continue?"; then

    echo ""
    echo "Checking hardware requirements..."

    if [ $spireq == "yes" ]; then
        echo ""
        if confirm "Hardware requires SPI, enable now?"; then
            \curl -sS get.pimoroni.com/spi | bash -s - "-y"
        fi
    fi

    if [ $i2creq == "yes" ]; then
        echo ""
        if confirm "Hardware requires I2C, enable now?"; then
            \curl -sS get.pimoroni.com/i2c | bash -s - "-y"
        fi
    fi

    if [ $i2sreq == "yes" ]; then
        DEVICE_TREE="yes" # assume not disabled
        if [ -e $CONFIG ] && grep -q "^device_tree=$" $CONFIG; then
            DEVICE_TREE="no"
        fi

        if [ $DEVICE_TREE = "yes" ]; then

            echo ""
            echo "Adding Device Tree Entry to "
            echo $CONFIG

            if [ -e $CONFIG ] && grep -q "^dtoverlay=hifiberry-dac$" $CONFIG; then
                echo "dtoverlay already active"
            else
                echo "dtoverlay=hifiberry-dac" | sudo tee -a $CONFIG
            fi

            if [ -e /etc/modprobe.d/raspi-blacklist.conf ]; then
                echo "Commenting out Blacklist entry in "
                echo "/etc/modprobe.d/raspi-blacklist.conf"
                sudo sed -i /etc/modprobe.d/raspi-blacklist.conf -e "s/^blacklist[[:space:]]*i2c-bcm2708.*/#blacklist i2c-bcm2708/"
                sudo sed -i /etc/modprobe.d/raspi-blacklist.conf -e "s/^blacklist[[:space:]]*snd-soc-pcm512x.*/#blacklist snd-soc-pcm512x/"
                sudo sed -i /etc/modprobe.d/raspi-blacklist.conf -e "s/^blacklist[[:space:]]*snd-soc-wm8804.*/#blacklist snd-soc-wm8804/"
            fi
        else
            echo ""
            echo "No Device Tree Detected, not supported"
            echo ""
            exit 1
        fi

        if [ -e $CONFIG ] && grep -q -E "^dtparam=audio=on$" $CONFIG; then
            bcm2835off="no"
            echo ""
            echo "Disabling default sound driver"
            echo ""
            sudo sed -i $CONFIG -e "s/^dtparam=audio=on$/#dtparam=audio=on/"
            if [ -e /etc/modules ] && grep -q "snd-bcm2835" /etc/modules; then
                sudo sed -i /etc/modules -e "s/^snd-bcm2835/#snd-bcm2835/"
            fi
        elif [ -e /etc/modules ] && grep -q "snd-bcm2835" /etc/modules; then
            bcm2835off="no"
            echo ""
            echo "Disabling default sound module"
            echo ""
            sudo sed -i /etc/modules -e "s/^snd-bcm2835/#snd-bcm2835/"
        else
            echo "Default sound driver currently not loaded"
            bcm2835off="yes"
        fi
    fi

    echo "Configuring sound output"
    if [ -e /etc/asound.conf ]; then
        sudo rm -f /etc/asound.conf.old
        sudo mv /etc/asound.conf.old /etc/asound.conf.old
    fi
    sudo echo -e "pcm.! \bdefault {\n type hw card 0\n}" > /etc/asound.conf
    sudo echo -e "ctl.! \bdefault {\n type hw card 0\n}" >> /etc/asound.conf

    if [ $bcm2835off == "yes" ]; then
        echo "We can now test your $productname"
        echo "Set speakers at a low volume first however!"
        if confirm "Do you wish to test your system now?"; then    
            echo "Testing..."
            speaker-test -c2 -t wav
        fi
    else
        warning "At this point you need to reboot your Pi"
    fi
    echo ""
    success "All done!"
    echo ""
    echo "Enjoy your new $productname!"
    
else
    echo ""
    echo "Aborting..."
    echo ""
fi
